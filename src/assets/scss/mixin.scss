
//绝对定位
@mixin position($fn:relative, $top: 0, $right: 0, $bottom: 0, $left: 0){
  @if $fn {
    position: $fn;
  }
  @if $top {
    top: $top;
  }
  @if $right {
      right: $right;
  }
  @if $bottom {
      bottom: $bottom;
  }
  @if $left {
      left: $left;
  }
}
//flex弹性盒子相关
@mixin flex-center($direction: row) {
  display: flex;
  align-items: center;
  justify-content: center;
  @if $direction {
      flex-direction: $direction;
  }
}
// 主轴为'direction'时,垂直居中,水平方向两端对齐
@mixin flex-between($direction: row) {
  display: flex;
  align-items: center;
  justify-content: space-between;
  @if $direction {
      flex-direction: $direction;
  }
}
// 主轴为'direction'时,垂直居中,水平方向平均分布
@mixin flex-around($direction: row) {
  display: flex;
  align-items: center;
  justify-content: space-around;
  @if $direction {
      flex-direction: $direction;
  }
}

// 清除浮动
@mixin clear-float {
  /* for IE6 IE7 */
  zoom: 1;
  &:after {
      visibility: hidden;
      display: block;
      font-size: 0;
      content: " ";
      clear: both;
      height: 0;
  }
}

// 背景图片
// auto： 背景图像的真实大小。 
// cover： 将背景图像等比缩放到完全覆盖容器，背景图像有可能超出容器。 
// contain： 将背景图像等比缩放到宽度或高度与容器的宽度或高度相等，背景图像始终被包含在容器内。
@mixin background-img($url: false, $size: cover) {
  //no-repeat 背景图片仅显示一次 没有平铺
  background-repeat: no-repeat;
  // scroll 默认值 背景图片会随着页面其余部分的滚动而滚动 or fixed 固定不动
  background-attachment: scroll;
  background-position: center center;
  background-size: $size;
  @if $url {
      background-image: url($url);
  }
}

//单行文本。。。
@mixin ellipsis-single{
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

// 多行文本省略号... 
// WebKit的CSS扩展属性，该方法适用于WebKit浏览器及移动端；
@mixin ellipsis-multi ($num: 2) {
  display: -webkit-box;
  overflow: hidden;
  text-overflow: ellipsis;
  word-break: break-all;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $num;
}

// 文字两端对齐
@mixin text-justify {
  text-align: justify;
  text-justify: inter-ideograph;
}

// 强制换行
@mixin toWrap {
  /* 只对英文起作用，以字母作为换行依据。 */
  word-break: break-all;
  /* 只对英文起作用，以单词作为换行依据。*/
  word-wrap: break-word;
  /* 只对中文起作用，强制换行。*/
  white-space: pre-wrap;
}
// 强制不换行
@mixin noWrap {
  /* 只对英文起作用，以字母作为换行依据。 */
  word-break: normal;
  /* 只对英文起作用，以单词作为换行依据。*/
  word-wrap: normal;
  /* 只对中文起作用，强制换行。*/
  white-space: nowrap;
}

//阴影
//x轴方向 y轴方向 模糊距离  阴影颜色
@mixin shadow-base($x:0px, $y:-4px, $b:4px, $c:rgba(0, 0, 0, 0.05)) {
  box-shadow: $x $y $b $c;
}

//盒子大小
@mixin size($width:100%, $height:100%) {
  @if $width {
      width: $width;
  }
  @if $height {
      height: $height;
  }
}

//去掉数值的单位
// @function strip-units($number){
//   @return $number / ($number * 0 + 1);
// }
// @mixin remCalc($property, $values...) { 
//   //返回$values列表的长度值 
//   $max: length($values);
//   $pxValues: ''; 
//   $remValues: ''; 
//   @for $i from 1 through $max { 
//       //返回$values列表中的第$i个值，并将单位值去掉 
//       $value: strip-units(nth($values, $i));
//       $browser-default-font-size: strip-units($browser-default-font-size); 
//       $pxValues: #{$pxValues + $value * $browser-default-font-size}px; 
//       @if $i < $max {
//           $pxValues: #{$pxValues + " "}; 
//       } 
//   } 
//   @for $i from 1 through $max {
//        $value: strip-units(nth($values, $i)); 
//        $remValues: #{$remValues + $value}rem; 
//        @if $i < $max {
//           $remValues: #{$remValues + " "}; 
//       } 
//   } 
//   @if $ie {
//       #{$property}: $pxValues;  
//   }
  
//   #{$property}: $remValues; 
// }